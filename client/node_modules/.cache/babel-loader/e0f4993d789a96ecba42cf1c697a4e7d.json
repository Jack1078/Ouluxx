{"ast":null,"code":"var _jsxFileName = \"/Users/sichael/iProjects/ouluxx/src/components/Button.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\"; // Button Customized with CSS\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    color: \"white\"\n  },\n  label: {\n    color: theme.palette.secondary.main\n  }\n}));\n\nfunction CustomizedButton(props) {\n  const classes = useStyles();\n  const {\n    id,\n    text,\n    color,\n    fontColor,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({\n    id: id,\n    color: color,\n    variant: \"contained\",\n    fullWidth: true,\n    style: {\n      minHeight: \"56px\"\n    }\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: fontColor,\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, text)));\n}\n\nCustomizedButton.prototype = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  fontColor: PropTypes.string.isRequired\n};\nexport default CustomizedButton;","map":{"version":3,"sources":["/Users/sichael/iProjects/ouluxx/src/components/Button.js"],"names":["React","PropTypes","makeStyles","Button","useStyles","theme","root","display","flexWrap","margin","spacing","input","color","label","palette","secondary","main","CustomizedButton","props","classes","id","text","fontColor","other","minHeight","fontSize","prototype","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GAD6B;AAKnCC,EAAAA,MAAM,EAAE;AACJA,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADJ,GAL2B;AAQnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GAR4B;AAWnCC,EAAAA,KAAK,EAAE;AACHD,IAAAA,KAAK,EAAEP,KAAK,CAACS,OAAN,CAAcC,SAAd,CAAwBC;AAD5B;AAX4B,CAAL,CAAN,CAA5B;;AAgBA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM;AAACgB,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWT,IAAAA,KAAX;AAAkBU,IAAAA,SAAlB;AAA6B,OAAGC;AAAhC,MAAyCL,KAA/C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACb,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,EAAE,EAAEc,EADR;AAEI,IAAA,KAAK,EAAER,KAFX;AAGI,IAAA,OAAO,EAAC,WAHZ;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAE;AAAZ;AANX,KAOQD,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAM,IAAA,KAAK,EAAE;AAACX,MAAAA,KAAK,EAAEU,SAAR;AAAmBG,MAAAA,QAAQ,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDJ,IAAhD,CARA,CADJ,CADJ;AAcH;;AAEDJ,gBAAgB,CAACS,SAAjB,GAA6B;AACzBN,EAAAA,EAAE,EAAEnB,SAAS,CAAC0B,MAAV,CAAiBC,UADI;AAEzBP,EAAAA,IAAI,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBC,UAFE;AAGzBhB,EAAAA,KAAK,EAAEX,SAAS,CAAC0B,MAAV,CAAiBC,UAHC;AAIzBN,EAAAA,SAAS,EAAErB,SAAS,CAAC0B,MAAV,CAAiBC;AAJH,CAA7B;AAOA,eAAeX,gBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\n// Button Customized with CSS\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n    },\n    margin: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        color: \"white\",\n    },\n    label: {\n        color: theme.palette.secondary.main\n    }\n}));\n\nfunction CustomizedButton(props) {\n    const classes = useStyles()\n    const {id, text, color, fontColor, ...other} = props\n\n    return (\n        <div className={classes.root}>\n            <Button\n                id={id}\n                color={color}\n                variant=\"contained\"\n                \n                fullWidth\n                style={{minHeight: \"56px\"}}\n                {...other}>\n            <span style={{color: fontColor, fontSize: 20}}>{text}</span>\n            </Button>\n        </div>\n    )\n}\n\nCustomizedButton.prototype = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    fontColor: PropTypes.string.isRequired,\n}\n\nexport default CustomizedButton"]},"metadata":{},"sourceType":"module"}