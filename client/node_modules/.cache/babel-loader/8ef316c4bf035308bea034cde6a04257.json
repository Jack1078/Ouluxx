{"ast":null,"code":"var _jsxFileName = \"/Users/sichael/iProjects/ouluxx/src/components/button_c.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n/**\n * Button with customized css\n * @param {id, text, color, fontColor} CustomizedButton\n */\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n}));\n\nfunction CustomizedButton(props) {\n  const classes = useStyles();\n  const {\n    id,\n    text,\n    color,\n    fontColor,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({\n    id: id,\n    color: color,\n    variant: \"contained\",\n    disableElevation: true,\n    disableFocusRipple: true,\n    fullWidth: true,\n    style: {\n      minHeight: \"40px\",\n      maxHeight: \"46px\"\n    }\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: fontColor,\n      fontSize: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, text)));\n}\n\nCustomizedButton.prototype = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  fontColor: PropTypes.string.isRequired\n};\nexport default CustomizedButton;","map":{"version":3,"sources":["/Users/sichael/iProjects/ouluxx/src/components/button_c.js"],"names":["React","PropTypes","makeStyles","Button","useStyles","theme","root","display","flexWrap","CustomizedButton","props","classes","id","text","color","fontColor","other","minHeight","maxHeight","fontSize","prototype","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA;;;;;AAKA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE;AAFR;AAD6B,CAAL,CAAN,CAA5B;;AAOA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM;AAACQ,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,SAAlB;AAA6B,OAAGC;AAAhC,MAAyCN,KAA/C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,EAAE,EAAEM,EADR;AAEI,IAAA,KAAK,EAAEE,KAFX;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,gBAAgB,MAJpB;AAKI,IAAA,kBAAkB,MALtB;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B;AAPX,KAQQF,KARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASA;AAAM,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAEC,SAAR;AAAmBI,MAAAA,QAAQ,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDN,IAApD,CATA,CADJ,CADJ;AAeH;;AAEDJ,gBAAgB,CAACW,SAAjB,GAA6B;AACzBR,EAAAA,EAAE,EAAEX,SAAS,CAACoB,MAAV,CAAiBC,UADI;AAEzBT,EAAAA,IAAI,EAAEZ,SAAS,CAACoB,MAAV,CAAiBC,UAFE;AAGzBR,EAAAA,KAAK,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UAHC;AAIzBP,EAAAA,SAAS,EAAEd,SAAS,CAACoB,MAAV,CAAiBC;AAJH,CAA7B;AAOA,eAAeb,gBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\n/**\n * Button with customized css\n * @param {id, text, color, fontColor} CustomizedButton\n */\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n    },\n}));\n\nfunction CustomizedButton(props) {\n    const classes = useStyles()\n    const {id, text, color, fontColor, ...other} = props\n\n    return (\n        <div className={classes.root}>\n            <Button\n                id={id}\n                color={color}\n                variant=\"contained\"\n                disableElevation\n                disableFocusRipple\n                fullWidth\n                style={{minHeight: \"40px\", maxHeight: \"46px\"}}\n                {...other}>\n            <span style={{color: fontColor, fontSize: \"16px\"}}>{text}</span>\n            </Button>\n        </div>\n    )\n}\n\nCustomizedButton.prototype = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    fontColor: PropTypes.string.isRequired,\n}\n\nexport default CustomizedButton"]},"metadata":{},"sourceType":"module"}