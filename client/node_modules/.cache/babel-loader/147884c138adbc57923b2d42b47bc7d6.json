{"ast":null,"code":"var _jsxFileName = \"/Users/sichael/iProjects/ouluxx/src/containers/productsDisplay_k.jsx\";\nimport React, { useState } from 'react';\nimport classes from './productsDisplay.module.css';\nimport PropTypes from 'prop-types';\nimport ProductIcon from '../components/productIcon_c';\n/**\n * The product carousel in the store page\n * @param {products} ProductsDisplay\n */\n\nconst products_per_page = 15;\n\nconst ProductsDisplay = props => {\n  const {\n    products\n  } = props;\n  const totalPages = parseInt(products.length / products_per_page) + 1;\n  const [currPage, setCurrPage] = useState(1);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.grid_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, products.slice((currPage - 1) * products_per_page, currPage * products_per_page).map(product => /*#__PURE__*/React.createElement(ProductIcon, {\n    name: product.name,\n    img_url: product.img_url,\n    alt: product.name,\n    categories: product.categories,\n    onClick: () => console.log('clicked product...'),\n    rating: product.rating,\n    price: product.price,\n    key: Math.random(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, currPage !== 1 && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setCurrPage(currPage - 1),\n    className: classes.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, '<'), `${currPage} of ${totalPages}`, currPage !== totalPages && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setCurrPage(currPage + 1),\n    className: classes.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, '>')));\n};\n\nProductsDisplay.propTypes = {\n  products: PropTypes.array.isRequired\n};\nexport default ProductsDisplay;","map":{"version":3,"sources":["/Users/sichael/iProjects/ouluxx/src/containers/productsDisplay_k.jsx"],"names":["React","useState","classes","PropTypes","ProductIcon","products_per_page","ProductsDisplay","props","products","totalPages","parseInt","length","currPage","setCurrPage","grid_container","slice","map","product","name","img_url","categories","console","log","rating","price","Math","random","btn","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA;;;;;AAKA,MAAMC,iBAAiB,GAAG,EAA1B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,UAAU,GAAGC,QAAQ,CAACF,QAAQ,CAACG,MAAT,GAAkBN,iBAAnB,CAAR,GAAgD,CAAnE;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACY,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QAAQ,CAACO,KAAT,CAAe,CAACH,QAAQ,GAAG,CAAZ,IAAiBP,iBAAhC,EAAmDO,QAAQ,GAAGP,iBAA9D,EAAiFW,GAAjF,CAAqFC,OAAO,iBACzF,oBAAC,WAAD;AACI,IAAA,IAAI,EAAEA,OAAO,CAACC,IADlB;AAEI,IAAA,OAAO,EAAED,OAAO,CAACE,OAFrB;AAGI,IAAA,GAAG,EAAEF,OAAO,CAACC,IAHjB;AAII,IAAA,UAAU,EAAED,OAAO,CAACG,UAJxB;AAKI,IAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CALnB;AAMI,IAAA,MAAM,EAAEL,OAAO,CAACM,MANpB;AAOI,IAAA,KAAK,EAAEN,OAAO,CAACO,KAPnB;AAQI,IAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,QAAQ,KAAK,CAAb,iBACG;AACI,IAAA,OAAO,EAAE,MAAMC,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAD9B;AAEI,IAAA,SAAS,EAAEV,OAAO,CAACyB,GAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK,GAHL,CAFR,EAOM,GAAEf,QAAS,OAAMH,UAAW,EAPlC,EAQKG,QAAQ,KAAKH,UAAb,iBACG;AACI,IAAA,OAAO,EAAE,MAAMI,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAD9B;AAEI,IAAA,SAAS,EAAEV,OAAO,CAACyB,GAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK,GAHL,CATR,CAhBJ,CADJ;AAkCH,CAvCD;;AAyCArB,eAAe,CAACsB,SAAhB,GAA4B;AACxBpB,EAAAA,QAAQ,EAAEL,SAAS,CAAC0B,KAAV,CAAgBC;AADF,CAA5B;AAIA,eAAexB,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport classes from './productsDisplay.module.css';\nimport PropTypes from 'prop-types';\nimport ProductIcon from '../components/productIcon_c';\n\n/**\n * The product carousel in the store page\n * @param {products} ProductsDisplay\n */\n\nconst products_per_page = 15;\n\nconst ProductsDisplay = (props) => {\n    const { products } = props;\n    const totalPages = parseInt(products.length / products_per_page) + 1;\n    const [currPage, setCurrPage] = useState(1);\n\n    return (\n        <div>\n            <div className={classes.grid_container}>\n                {products.slice((currPage - 1) * products_per_page, currPage * products_per_page).map(product => (\n                    <ProductIcon\n                        name={product.name}\n                        img_url={product.img_url}\n                        alt={product.name}\n                        categories={product.categories}\n                        onClick={() => console.log('clicked product...')}\n                        rating={product.rating}\n                        price={product.price}\n                        key={Math.random()}\n                    />\n                ))}\n            </div>\n\n            <div>\n                {currPage !== 1 &&\n                    <div\n                        onClick={() => setCurrPage(currPage - 1)}\n                        className={classes.btn}>\n                        {'<'}</div>\n                }\n                {`${currPage} of ${totalPages}`}\n                {currPage !== totalPages &&\n                    <div\n                        onClick={() => setCurrPage(currPage + 1)}\n                        className={classes.btn}>\n                        {'>'}</div>\n                }\n            </div>\n        </div >\n    );\n}\n\nProductsDisplay.propTypes = {\n    products: PropTypes.array.isRequired,\n}\n\nexport default ProductsDisplay;"]},"metadata":{},"sourceType":"module"}